from flask import Flask, request, jsonify
from flask_cors import CORS
import sqlite3

app = Flask(__name__)
CORS(app)

# Database setup
def init_db():
    conn = sqlite3.connect("energy.db")
    c = conn.cursor()
    c.execute("""
        CREATE TABLE IF NOT EXISTS energy_usage (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            device TEXT,
            consumption REAL,
            timestamp TEXT
        )
    """)
    c.execute("""
        CREATE TABLE IF NOT EXISTS budget (
            id INTEGER PRIMARY KEY,
            limit_value REAL
        )
    """)
    conn.commit()
    conn.close()

init_db()

# API to receive IoT data
@app.route("/data", methods=["POST"])
def receive_data():
    data = request.json
    device = data.get("device", "unknown")
    consumption = data.get("consumption", 0.0)
    timestamp = data.get("timestamp", "")

    conn = sqlite3.connect("energy.db")
    c = conn.cursor()
    c.execute("INSERT INTO energy_usage (device, consumption, timestamp) VALUES (?, ?, ?)",
              (device, consumption, timestamp))
    conn.commit()
    conn.close()

    return jsonify({"message": "Data received successfully!"})

# API to fetch energy trends
@app.route("/stats", methods=["GET"])
def get_stats():
    conn = sqlite3.connect("energy.db")
    c = conn.cursor()
    c.execute("SELECT device, SUM(consumption) FROM energy_usage GROUP BY device")
    data = c.fetchall()
    conn.close()

    stats = [{"device": row[0], "total_consumption": row[1]} for row in data]
    return jsonify(stats)

# API to set budget
@app.route("/budget", methods=["POST"])
def set_budget():
    data = request.json
    limit_value = data.get("limit", 0.0)

    conn = sqlite3.connect("energy.db")
    c = conn.cursor()
    c.execute("DELETE FROM budget")  # Only one budget value allowed
    c.execute("INSERT INTO budget (id, limit_value) VALUES (1, ?)", (limit_value,))
    conn.commit()
    conn.close()

    return jsonify({"message": "Budget set successfully!"})


if __name__ == "__main__":
    app.run(port=5001, debug=True)



